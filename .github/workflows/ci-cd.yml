name: CI/CD

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: recallguard
          POSTGRES_USER: recallguard
          POSTGRES_PASSWORD: recallguard
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      PG_URL: postgresql+psycopg2://recallguard:recallguard@localhost/recallguard
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - run: pip install -r requirements.txt
      - run: ruff check .
      - run: pytest --cov=backend --cov-report=xml -q
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-py-${{ matrix.python-version }}
          path: coverage.xml
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run lint --silent
      - run: npm test --silent -- --coverage
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-js
          path: frontend/coverage/lcov.info

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@v1
      - run: flyctl deploy --remote-only --detach
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      - uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          prod: true
